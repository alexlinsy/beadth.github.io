{"version":3,"sources":["sp500/store/constants.js","sp500/store/actionCreators.js","sp500/index.js","sp500/store/reducer.js","store/reducer.js","store/index.js","index.js"],"names":["INIT_DATA_LIST","CHANGE_CURRENT_CITY","getMtData","dispatch","url","window","location","href","axios","get","then","res","data","Base64","decode","dayList","codeList","totalList","i","length","push","tmp","key","k","type","constants","dataList","InitDataList","JSON","parse","reverse","catch","console","log","SP500","this","props","daylList","initData","Component","SP500UI","Header","Layout","Footer","Column","Table","className","theme","mode","defaultSelectedKeys","Item","justify","style","background","padding","xs","span","sm","md","lg","xl","dataSource","size","pagination","responsive","Object","keys","map","index","item","title","dataIndex","textAlign","connect","state","getIn","defaultState","fromJS","totaLList","changeCurrentCity","action","result","currentCity","currentZoom","merge","initDataList","reducer","combineReducers","sp500","sp500Reducer","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0c590b0.chunk.js","sourcesContent":["\nexport const INIT_DATA_LIST = 'sp500/INIT_DATA_LIST';\nexport const CHANGE_CURRENT_CITY = 'vipmap/CHANGE_CURRENT_CITY';\nexport const CHANGE_CURRENT_ZOOM = 'vipmap/CHANGE_CURRENT_ZOOM';","import axios from \"axios\"\nimport Base64  from 'base-64';\nimport * as constants from './constants';\n\nexport const changeCurrentCity = (city, zoom) => ({\n  type: constants.CHANGE_CURRENT_CITY,\n  currentCity: city,\n  currentZoom: zoom,\n})\n\nexport const InitDataList = (data) => {\n  // 数据处理\n  var dayList = [];\n  var codeList = [];\n  var totalList = [];\n\n  for ( var i=0; i<data.length; i++){\n    dayList.push(data[i]['time'])\n    var tmp = 0\n    for (var key in data[i].data){\n      tmp += data[i].data[key]['close']\n      data[i][key] = data[i].data[key]['close'];\n    }\n    data[i]['TOTAL'] = tmp\n    totalList.push(tmp)\n\n    // var city = data[i].city;\n    // if (city in result){\n    //   result[city].push(data[i])\n    // }else {\n    //   result[city] = [data[i]]\n    // }\n\n  }\n  // code list\n  for (var k in data[0]){\n    if (k !== \"data\"){\n      codeList.push(k)\n    }\n  }\n  return {\n    type: constants.INIT_DATA_LIST,\n    dataList: data,\n    totalList: totalList,\n    dayList: dayList,\n    codeList: codeList,\n  }};\n\nexport const changeCurrentZoom = (value) => ({\n  type: constants.CHANGE_CURRENT_ZOOM,\n  value,\n})\n\n// 使用了 redux-thunk 之后 返回可以是一个函数\nexport const getMtData = () => {\n  return (dispatch) => { // dispatch: 如果action是函数的话会自动接收到dispatch方法\n    // ajax request\n    var url = window.location.href\n    axios.get(url + \"us/sp500_30.json\").then((res) => {\n      var data = Base64.decode(res.data.data)\n      dispatch(InitDataList(JSON.parse(data).reverse())) // action change store\n      }).catch(() => { // ajax request error\n        console.log(\"error\")\n    })\n  }\n}","import React, {Component} from 'react';\nimport {Row, Col} from 'antd';\nimport {connect} from \"react-redux\"\n\nimport {Layout, Menu} from 'antd';\nimport { Table } from 'antd';\n// import {Chart} from '@antv/g2';\n\nimport {getMtData,} from \"./store/actionCreators\";\n\n\nclass SP500 extends Component {\n\n  render() {\n    const {dataList, totalList, codeList, dayList } = this.props\n    return (<SP500UI\n      dataList={dataList}\n      totalList={totalList}\n      daylList={dayList}\n      codeList={codeList}\n    />)\n  }\n\n  componentDidMount() {\n    this.props.initData();\n    // this.bindEvents();\n  }\n}\n\n// {/*const CHART = (props) => {*/}\n//   const source = props.dataList.map((arr) => {\n//     return {\n//       name: arr[0],\n//       day: arr[1],\n//       sales: arr[2],\n//     };\n//   });\n//   const chart = new Chart({\n//     container: 'container',\n//     autoFit: true,\n//     height: 500,\n//   });\n//   chart.data(source);\n//   chart.scale('name', {\n//     type: 'cat',\n//     values: props.codeList,\n//   });\n//   chart.scale('day', {\n//     type: 'cat',\n//     values: props.daylList,\n//   });\n//   chart.scale('sales', {\n//     nice: true,\n//     height: 50,\n//   });\n//\n//   chart.axis('name', {\n//     tickLine: null,\n//     grid: {\n//       alignTick: false,\n//       line: {\n//         style: {\n//           lineWidth: 1,\n//           lineDash: null,\n//           stroke: '#f0f0f0',\n//         },\n//       },\n//     },\n//   });\n//\n//   chart.axis('day', {\n//     title: null,\n//     grid: {\n//       alignTick: false,\n//       line: {\n//         style: {\n//           lineWidth: 1,\n//           lineDash: null,\n//           stroke: '#f0f0f0',\n//         },\n//       },\n//     },\n//   });\n//\n//   chart.tooltip({\n//     showMarkers: false,\n//   });\n//\n//   chart\n//     .polygon()\n//     .position('name*day')\n//     .color('sales', '#BAE7FF-#1890FF-#0050B3')\n//     .label('sales', {\n//       offset: -2,\n//       style: {\n//         fill: '#fff',\n//         shadowBlur: 2,\n//         shadowColor: 'rgba(0, 0, 0, .45)',\n//       },\n//     })\n//     .style({\n//       lineWidth: 1,\n//       stroke: '#fff',\n//     });\n//   chart.interaction('element-active')\n//   return (\n//     chart.render()\n//   )\n//\n//\n// }\n\nconst SP500UI = (props) => {\n  const {Header, Footer} = Layout;\n  // const style1 = {background: '#0092ff', padding: '0 0'};\n  const style2 = {background: '#FF0000', padding: '0 0'};\n\n  const { Column } = Table;\n  return (\n\n    <Layout>\n      <Header className=\"header\">\n        <div className=\"logo\"/>\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n          <Menu.Item key=\"1\">nav 1</Menu.Item>\n          <Menu.Item key=\"2\">nav 2</Menu.Item>\n          <Menu.Item key=\"3\">nav 3</Menu.Item>\n        </Menu>\n      </Header>\n      <Row justify=\"center\">\n        <Col style={style2} xs={{span: 20}} sm={{span: 20}} md={{span: 20}} lg={{span: 17}} xl={{span: 17}}>\n          {/*<CHART*/}\n          {/*  dataList={props.dataList}*/}\n          {/*  totalList={props.totalList}*/}\n          {/*  daylList={props.dayList}*/}\n          {/*  codeList={props.codeList}*/}\n          {/*/>*/}\n\n          <Table dataSource={props.dataList} size=\"middle\" pagination={false} responsive=\"lg\">\n            {\n              Object.keys(props.codeList).map((index) => {\n                var item = props.codeList[index]\n                return <Column title={item} dataIndex={item} key={index}/>\n              })\n            }\n          </Table>\n        </Col>\n        {/*<Col style={style1} xs={{span: 4}} sm={{span: 4}} md={{span: 4}} lg={{span: 4}} xl={{span: 4}}>*/}\n\n\n        {/*</Col>*/}\n      </Row>\n      <Footer style={{textAlign: 'center'}}>Market Breadth ©2020 Created by Market Breadth</Footer>\n    </Layout>\n\n  )\n\n\n}\n\n// link 规则（方式）映射关系\nconst mapState = (state) => {\n  return {\n    dataList: state.getIn(['sp500', 'dataList']),\n    totalList: state.getIn(['sp500', 'totalList']),\n    codeList: state.getIn(['sp500', 'codeList']),\n    dayList: state.getIn(['sp500', 'dayList']),\n  }\n};\n\n// redux 数据修改逻辑映射 store.dispatch, props\nconst mapDispatch = (dispatch) => {\n  return {\n    // load list\n    initData() {\n      dispatch(getMtData())\n    },\n\n  }\n};\n\n// 组件是通过connect获取到state的数据\nexport default connect(mapState, mapDispatch)(SP500)\n\n// export default SP500","import * as constants from './constants';\nimport { fromJS} from 'immutable';\n\nconst defaultState = fromJS({\n  dataList: [],\n  totaLList: [],\n  dayList: [],\n  codeList: [],\n});\n\n\nconst changeCurrentCity = (state, action) => {\n  var result = {\n    \"currentCity\": action.currentCity,\n    \"currentZoom\": action.currentZoom,\n  }\n  return state.merge(result)\n}\n\nconst initDataList = (state, action) => {\n  return state.merge({\n    dataList: action.dataList,\n    totalList: action.totalList,\n    dayList:action.dayList,\n    codeList:action.codeList,\n  })\n}\n\n// state    整个DOM的数据库\n// action\n// reducer 可以接收state，但是不可以在修改stacurrentCityte\n\nconst reducer = (state = defaultState, action) => {\n  switch(action.type) {\n    case constants.INIT_DATA_LIST:\n      return initDataList(state, action)\n    case constants.CHANGE_CURRENT_CITY:\n      return changeCurrentCity(state, action)\n    default:\n      return state;\n  }\n}\n\n\n\nexport default reducer;","import { combineReducers } from 'redux-immutable';\nimport { reducer as sp500Reducer } from '../sp500/store';\n\nconst reducer = combineReducers({\n\t// vipmap: vipmapReducer,\n\tsp500: sp500Reducer,\n});\n\nexport default reducer;\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from \"./reducer\";\n\n/*\n  redux-sagas 中间件把异步放到单独的文件进行管理\n  redux-thunk 中间件把异步放到action中\n */\n\n// https://github.com/zalmoxisus/redux-devtools-extension/#12-advanced-store-setup\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst enhancer = composeEnhancers(\n\tapplyMiddleware(thunk),\n\t// other store enhancers if any\n);\n\nconst store = createStore(\n\treducer,\n\tenhancer // redux 中间件\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\"\n\nimport 'antd/dist/antd.css';\n\nimport SP500 from './sp500';\nimport store from \"./store\";\n\nconst App = (\n    <Provider store={store}>\n        <SP500/>\n    </Provider>\n)\n\nReactDOM.render(\n    App,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}