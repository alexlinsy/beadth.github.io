name: update data

on:
  workflow_dispatch:
  schedule:
    - cron: 29 21 * * 1-5
    - cron: 30 22 * * 1-5
    - cron: 50 22 * * 1-5
    - cron: 29 23 * * 1-5


jobs:
  GetData:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: sp500

#      - name: Run docker-compose
#        run: docker-compose up && docker-compose down

      - name: Run docker-compose
        run: docker-compose up -d

      - name: pip
        run: pip3 install setuptools && pip3 install -r requirements.txt && sudo apt-get install tree

      - name: run
        run: python3 app.py

      - name: Show data files
        run: tree .

      - name: cp
        run: mkdir /opt/data && rm -rf output/1 && cp output/* /opt/data

      - name: Show data
        run: tree /opt/data && ls -l /opt/data

      - name: Commit changes
        uses: EndBug/add-and-commit@v4
        with:
          author_name: ${{ secrets.WORKFLOW_USERNAME }}
          author_email: ${{ secrets.WORKFLOW_EMAIL }}
          message: "Update"
          add: "*.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Create Release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#        with:
#          tag_name:
#          release_name: Release ${{ github.ref }}
#          body: |
#            Latest data
#          draft: false
#          prerelease: false
#
#      - name: Upload Release all Asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: /opt/data/sp500_all.json
#          asset_name: sp500_all.json
#          asset_content_type: application/json
#
#      - name: Upload Release 30 Asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: /opt/data/sp500_30.json
#          asset_name: sp500_30.json
#          asset_content_type: application/json
#
#
#      - name: Upload Release 100 Asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: /opt/data/sp500_100.json
#          asset_name: sp500_100.json
#          asset_content_type: application/json
#
#
#      - name: Upload Release 360 Asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: /opt/data/sp500_360.json
#          asset_name: sp500_360.json
#          asset_content_type: application/json
